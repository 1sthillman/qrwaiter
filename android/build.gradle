// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.10.1'
        classpath 'com.google.gms:google-services:4.4.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    
    // JDK Image sorunu için global çözüm
    gradle.taskGraph.beforeTask { task ->
        if (task instanceof JavaCompile) {
            task.options.compilerArgumentProviders.removeIf { provider ->
                provider.toString().contains("JdkImageInput")
            }
        }
    }
}

// variables.gradle yerine doğrudan tanımlamalar
ext {
    minSdkVersion = 22
    compileSdkVersion = 34
    targetSdkVersion = 34
    androidxActivityVersion = '1.7.0'
    androidxAppCompatVersion = '1.6.1'
    androidxCoordinatorLayoutVersion = '1.2.0'
    androidxCoreVersion = '1.10.0'
    androidxFragmentVersion = '1.5.6'
    coreSplashScreenVersion = '1.0.0'
    androidxWebkitVersion = '1.6.1'
    junitVersion = '4.13.2'
    androidxJunitVersion = '1.1.5'
    androidxEspressoCoreVersion = '3.5.1'
    cordovaAndroidVersion = '10.1.1'
    playServicesVersion = '21.0.0'
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    
    // Her proje için JDK Image dönüşüm sorunu çözümü
    afterEvaluate { project ->
        project.tasks.withType(JavaCompile) { task ->
            task.options.compilerArgumentProviders.removeIf { provider ->
                provider.toString().contains("JdkImageInput")
            }
        }
    }
}

// Capacitor projesindeki JDK Image sorununu atla
configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            if (details.requested.group == 'com.android.tools.build' && details.requested.name == 'gradle') {
                details.useVersion '8.2.2'
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
